{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","this","timerId","setInterval","setState","console","log","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAVP,gCAaE,SAAmBS,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eACEP,KAAKQ,MAAMD,SAjBnB,kCAqBE,WACEE,cAAcT,KAAKC,WAtBvB,oBAyBE,WACE,OACE,8BACGD,KAAKJ,MAAMC,KADd,SA3BN,GAA2Ba,IAAMC,YC+DlBC,E,4MA7DbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKZ,SAAS,CACZU,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKb,SAAS,CACZU,gBAAgB,K,EAIpBI,cAAgB,WACd,EAAKd,SAAS,CACZW,UAAWI,KAAKC,MAAsB,EAAhBD,KAAKE,a,4CAI/B,WACE,IAAQP,EAAmBb,KAAKJ,MAAxBiB,eAER,OACE,yBAAKQ,UAAU,OACb,2CACA,2CAEG,IACCR,GAAkB,kBAAC,EAAD,CAAON,KAAMP,KAAKJ,MAAMkB,aAG9C,4BACEQ,KAAK,SACLC,QAASvB,KAAKe,WAFhB,cAOA,4BACEO,KAAK,SACLC,QAASvB,KAAKgB,WAFhB,cAOA,4BACEM,KAAK,SACLC,QAASvB,KAAKiB,eAFhB,wB,GAlDUP,IAAMC,WCAxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b72f68f9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${\n        this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.date}\n        .\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 5),\n    });\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          { isClockVisible && <Clock name={this.state.clockName} /> }\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}